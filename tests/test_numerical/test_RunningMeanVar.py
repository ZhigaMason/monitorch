import pytest
import numpy as np

from monitorch.numerical import RunningMeanVar

@pytest.mark.parametrize(
    ['values'],
    [
        ( [1, 2, 3, 4, 5, 6, 7, 8, 9, 0] ,),
        ( [1.089978775815578, -1.5094863819295017, 0.8630261653154785, 1.079134522397724, -0.23907308396036608, -1.3195297546956444, -0.6050181029254569, -0.43514864682952586, 2.1369306573115217, 0.8274596231572071],),
        ## Tests bellow are generated from student's t distribution with 1 df, so they will not have 1st moment (mean) and 2nd centralized,
        ## so the tests should be stronger
        ( [-50.73901933515105, -409.12283191532026, 1628.7010089906457, -45.96191603127306, 4.25096355455973, -88.40291807984494, 414.7387864276699, -60.25380813292339, -748.5315010089141, 2.132662022394049, -761.468383135321, 41.671043767988884, 7608.945660229651, -174.50047591619324, -54.36795929964263, -438.2180492974778, -11.856052563424997, 275.2653645565548, 45.297296815894605, -209.4476887181471, -34.679778529755126, -34.913989357735744, -252.67715452170944, 102.92717201778095, -130.08907684984558, 9108.458258735422, -537.7425688911505, -839.1909499876656, -30.459512678285638, 32.73933448361667, 6.843289352744289, -63.079614774408675, 909.6009200770729, 45.370849942537795, -234.63541794345147, -111.04622323222354, -46.97964714291714, 7060.920296356006, 227.16622724441856, 171.63372087638237, 64.06215812433237, 45.18911469932299, 226.04542470163955, -420.13575130813075, 11.704581301632572, 119.27007445520432, 65.10502990073503, -56.22576886156269, 8.469453583186507, -79.62511641660866, 24.582414905829825, 9.0145535482751, 120.88510353860717, 34.22560004112868, 648.3694587038906, 326.08694118452127, 1873.359617346019, 41.14282431040579, -82.18352696033598, -3115.022943445845, -71.60614163710342, 21.01294725261658, -834.6752602995467, 134.39503263268108, -575.3124271899259, -99.13888718609637, -105.89612849988464, 1029.5309186432644, -429.6680476230723, 697.658749387922, -114.41586805607866, 73.68445270356247, 223.85160558754302, -360.221033545761, 14.186687765376945, -186.70913250456155, 73.61765223523503, 499.7349878490865, -100.60591722016606, 4.702860600694775, -56.426423943066666, -68.93481406954778, 28.36202359526272, 155.88304897133392, 131.36086624919724, 2.8610233797494216, -11.317757975621586, 332.4595202071255, -319.9979775246729, 408.07972552410735, -553.281900894556, 37.815192696159926, -325.57371831817164, 86.6759983209263, -45.59785040517781, -6.786468851201495, -98.48142445460631, 87.81737354173835, -102.41507719875942, -565.320424014599], ),
        ( [3.9978774988029286, -3.193991327883468, 77.98238263901891, 20.919002264740055, 2.469846423012995, 5.683539129463677, -5.03844385673955, 46.31976566599908, 7.607471988949728, 0.3379345614086719, -4.226773893399312, -2.921290973999716, -0.5182955083343417, 1.4068968141595797, -1.172921799195003, -5.778774454337164, -9.136368729329641, -2.4558476972625147, 5.060382848363186, -8.282314995631076, -4.296816782456458, 2.0488358205668393, -2.1410775121144123, -2.5145146531748646, 11.882746065187654, -4.794295226054533, 0.882857091205417, 0.5485700585360389, -2.237658485230829, -4.303928568229767, 6.686950187576909, 2.1055116393648934, 2.0131074445582877, 1.8989980848574408, -5.718168810357827, 2.1447129417305084, 94.97778451688599, 3.225035073741939, 4.456444301051092, -1.8303217887797123, -15.612089054234445, -4.471816446593893, -0.7459116579833438, 0.22796979071285395, -32.468255463616735, -0.597506346081026, 3.9083510253387184, -1.1637797049856615, 1.207370232160608, 1.4864642904324503], ),
        ( [1.0088691442463318, -8.232803477116608, 1.837731736621118, 12.627858602256588, 6.47654389219627, 2.8847620301556627, -1.9821707659767038, -2.3240925552023453, -2.449181432722311, -4.111794227349374, -0.7615057622856275, 2.0842819333003813, 5.732009299796991, -1.5304404332264103, 1.2956455540058953, 1.574951998577588, 1.045318228478407, 3.8542527281331465, -3.737042733548987, 14.981698691608562, -0.6754734864747467, 5.4855349094536665, 3.552441626645771, 0.8449117249734253, -9.543287064798287, 6.310278618157383, -4.056665910296741, -0.6577331008440056, 0.4809739574628218, -11.032304316545856, 0.4105380503949082, -5.599309391650874, -2.8865838955743808, 7.288484898427107, -4.106704135960469, 2.467387986209191, -0.14000294143981473, 1.9799023577306434, -6.974181399005663, 5.749180402243165, 6.220989897397784, -0.6409421585978539, 5.881353899918632, -0.841557623701417, 3.7835130288737577, 103.93364218858599, -41.852577311155684, 2.824410694050756, 1.1449197303916439, -6.739725700843589, 1.4657735839091144, -4.212365166830226, -0.8125693305975166, -0.19928879915641545, 3.5316381366697316, -0.513881500863228, 0.6587809303659141, 5.618977103404623, -8.14891074285837, -0.3782331122222764, -8.02300980836608, 0.39979844384095004, 0.4113443092242104, 5.148601802277002, -0.24762766974339945, -1.173577053053102, 1.6128379665497101, -0.02855355222028111, -0.5388242744107188, 3.717945129420412, 1.49745589103569, 16.136940335216163, -3.7703230939064882, -3.4117514062036776, 6.755332928523861, 23.314988778694858, 8.447401086500228, -0.20080204267761692, 2.9492964721756434, 4.680729155402568, -5.563898482428202, 10.624424409052285, 0.377349642288964, 4.790192550442508, -0.6825665179204323, -37.16626855142205, -5.9637416281545805, 4.531842268380564, -2.5012662714320166, 0.3855502207609751, -4.890386957209374, 31.841034574493627, 1.947588532800995, 5.278823346147869, 24.487518701361836, -1.9525614407665615, -4.3187887753166105, 16.953970636732457, 1.4434784412685016, -6.224802098425139],),
    ]
)
def test_running_mean_variance(values, eps=1e-7):
    rmv = RunningMeanVar()
    assert rmv.count == 0
    assert rmv.mean == 0
    assert rmv.var == 0

    for idx, value in enumerate(values):
        rmv.update(value)
        assert rmv.count == (idx + 1)
        np_mean = np.mean(values[:(idx + 1)])
        assert abs(np_mean - rmv.mean) < eps
        np_var  = np.var(values[:(idx + 1)])
        assert abs(np_var - rmv.var) < eps
        assert rmv.min_ == np.min(values[:(idx + 1)])
        assert rmv.max_ == np.max(values[:(idx + 1)])

